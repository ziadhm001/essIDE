{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ace_builds_1 = require(\"ace-builds\");\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar isEqual = require(\"lodash.isequal\");\nvar editorOptions_1 = require(\"./editorOptions\");\nvar ace = (0, editorOptions_1.getAceInstance)();\nvar ReactAce = /** @class */function (_super) {\n  __extends(ReactAce, _super);\n  function ReactAce(props) {\n    var _this = _super.call(this, props) || this;\n    editorOptions_1.editorEvents.forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    _this.debounce = editorOptions_1.debounce;\n    return _this;\n  }\n  ReactAce.prototype.isInShadow = function (node) {\n    var parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  };\n  ReactAce.prototype.componentDidMount = function () {\n    var _this = this;\n    var _a = this.props,\n      className = _a.className,\n      onBeforeLoad = _a.onBeforeLoad,\n      onValidate = _a.onValidate,\n      mode = _a.mode,\n      focus = _a.focus,\n      theme = _a.theme,\n      fontSize = _a.fontSize,\n      value = _a.value,\n      defaultValue = _a.defaultValue,\n      showGutter = _a.showGutter,\n      wrapEnabled = _a.wrapEnabled,\n      showPrintMargin = _a.showPrintMargin,\n      _b = _a.scrollMargin,\n      scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b,\n      keyboardHandler = _a.keyboardHandler,\n      onLoad = _a.onLoad,\n      commands = _a.commands,\n      annotations = _a.annotations,\n      markers = _a.markers,\n      placeholder = _a.placeholder;\n    this.editor = ace.edit(this.refEditor);\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n    var editorProps = Object.keys(this.props.editorProps);\n    for (var i = 0; i < editorProps.length; i++) {\n      this.editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\n    }\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n    }\n    this.editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor.getSession().setMode(typeof mode === \"string\" ? \"ace/mode/\".concat(mode) : mode);\n    if (theme && theme !== \"\") this.editor.setTheme(\"ace/theme/\".concat(theme));\n    this.editor.setFontSize(typeof fontSize === \"number\" ? \"\".concat(fontSize, \"px\") : fontSize);\n    this.editor.getSession().setValue(!defaultValue ? value || \"\" : defaultValue);\n    if (this.props.navigateToFileEnd) {\n      this.editor.navigateFileEnd();\n    }\n    this.editor.renderer.setShowGutter(showGutter);\n    this.editor.getSession().setUseWrapMode(wrapEnabled);\n    this.editor.setShowPrintMargin(showPrintMargin);\n    this.editor.on(\"focus\", this.onFocus);\n    this.editor.on(\"blur\", this.onBlur);\n    this.editor.on(\"copy\", this.onCopy);\n    this.editor.on(\"paste\", this.onPaste);\n    this.editor.on(\"change\", this.onChange);\n    this.editor.on(\"input\", this.onInput);\n    if (placeholder) {\n      this.updatePlaceholder();\n    }\n    this.editor.getSession().selection.on(\"changeSelection\", this.onSelectionChange);\n    this.editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\n    if (onValidate) {\n      // @ts-ignore types don't include\n      this.editor.getSession().on(\"changeAnnotation\", function () {\n        // tslint:disable-next-line:no-shadowed-variable\n        var annotations = _this.editor.getSession().getAnnotations();\n        _this.props.onValidate(annotations);\n      });\n    }\n    this.editor.session.on(\"changeScrollTop\", this.onScroll);\n    this.editor.getSession().setAnnotations(annotations || []);\n    if (markers && markers.length > 0) {\n      this.handleMarkers(markers);\n    }\n    // get a list of possible options to avoid 'misspelled option errors'\n    var availableOptions = this.editor.$options;\n    editorOptions_1.editorOptions.forEach(function (option) {\n      if (availableOptions.hasOwnProperty(option)) {\n        // @ts-ignore\n        _this.editor.setOption(option, _this.props[option]);\n      } else if (_this.props[option]) {\n        console.warn(\"ReactAce: editor option \".concat(option, \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\"));\n      }\n    });\n    this.handleOptions(this.props);\n    if (Array.isArray(commands)) {\n      commands.forEach(function (command) {\n        if (typeof command.exec === \"string\") {\n          _this.editor.commands.bindKey(command.bindKey, command.exec);\n        } else {\n          _this.editor.commands.addCommand(command);\n        }\n      });\n    }\n    if (keyboardHandler) {\n      this.editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n    }\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n    if (onLoad) {\n      onLoad(this.editor);\n    }\n    this.editor.resize();\n    if (focus) {\n      this.editor.focus();\n    }\n  };\n  ReactAce.prototype.componentDidUpdate = function (prevProps) {\n    var oldProps = prevProps;\n    var nextProps = this.props;\n    for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n      var option = editorOptions_1.editorOptions[i];\n      if (nextProps[option] !== oldProps[option]) {\n        // @ts-ignore\n        this.editor.setOption(option, nextProps[option]);\n      }\n    }\n    if (nextProps.className !== oldProps.className) {\n      var appliedClasses = this.refEditor.className;\n      var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n      var oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(function (oldClass) {\n        var index = appliedClassesArray_1.indexOf(oldClass);\n        appliedClassesArray_1.splice(index, 1);\n      });\n      this.refEditor.className = \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n    }\n    // First process editor value, as it may create a new session (see issue #300)\n    var valueChanged = this.editor && nextProps.value != null && this.editor.getValue() !== nextProps.value;\n    if (valueChanged) {\n      // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n      this.silent = true;\n      var pos = this.editor.session.selection.toJSON();\n      this.editor.setValue(nextProps.value, nextProps.cursorStart);\n      this.editor.session.selection.fromJSON(pos);\n      this.silent = false;\n    }\n    if (nextProps.placeholder !== oldProps.placeholder) {\n      this.updatePlaceholder();\n    }\n    if (nextProps.mode !== oldProps.mode) {\n      this.editor.getSession().setMode(typeof nextProps.mode === \"string\" ? \"ace/mode/\".concat(nextProps.mode) : nextProps.mode);\n    }\n    if (nextProps.theme !== oldProps.theme) {\n      this.editor.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n    if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n      if (nextProps.keyboardHandler) {\n        this.editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n      } else {\n        this.editor.setKeyboardHandler(null);\n      }\n    }\n    if (nextProps.fontSize !== oldProps.fontSize) {\n      this.editor.setFontSize(typeof nextProps.fontSize === \"number\" ? \"\".concat(nextProps.fontSize, \"px\") : nextProps.fontSize);\n    }\n    if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n      this.editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n    }\n    if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n      this.editor.setShowPrintMargin(nextProps.showPrintMargin);\n    }\n    if (nextProps.showGutter !== oldProps.showGutter) {\n      this.editor.renderer.setShowGutter(nextProps.showGutter);\n    }\n    if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n      this.handleOptions(nextProps);\n    }\n    // if the value or annotations changed, set the annotations\n    // changing the value may create create a new session which will require annotations to be re-set\n    if (valueChanged || !isEqual(nextProps.annotations, oldProps.annotations)) {\n      this.editor.getSession().setAnnotations(nextProps.annotations || []);\n    }\n    if (!isEqual(nextProps.markers, oldProps.markers) && Array.isArray(nextProps.markers)) {\n      this.handleMarkers(nextProps.markers);\n    }\n    // this doesn't look like it works at all....\n    if (!isEqual(nextProps.scrollMargin, oldProps.scrollMargin)) {\n      this.handleScrollMargins(nextProps.scrollMargin);\n    }\n    if (prevProps.height !== this.props.height || prevProps.width !== this.props.width) {\n      this.editor.resize();\n    }\n    if (this.props.focus && !prevProps.focus) {\n      this.editor.focus();\n    }\n  };\n  ReactAce.prototype.handleScrollMargins = function (margins) {\n    if (margins === void 0) {\n      margins = [0, 0, 0, 0];\n    }\n    this.editor.renderer.setScrollMargin(margins[0], margins[1], margins[2], margins[3]);\n  };\n  ReactAce.prototype.componentWillUnmount = function () {\n    if (this.editor) {\n      this.editor.destroy();\n      this.editor = null;\n    }\n  };\n  ReactAce.prototype.onChange = function (event) {\n    if (this.props.onChange && !this.silent) {\n      var value = this.editor.getValue();\n      this.props.onChange(value, event);\n    }\n  };\n  ReactAce.prototype.onSelectionChange = function (event) {\n    if (this.props.onSelectionChange) {\n      var value = this.editor.getSelection();\n      this.props.onSelectionChange(value, event);\n    }\n  };\n  ReactAce.prototype.onCursorChange = function (event) {\n    if (this.props.onCursorChange) {\n      var value = this.editor.getSelection();\n      this.props.onCursorChange(value, event);\n    }\n  };\n  ReactAce.prototype.onInput = function (event) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n    if (this.props.placeholder) {\n      this.updatePlaceholder();\n    }\n  };\n  ReactAce.prototype.onFocus = function (event) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event, this.editor);\n    }\n  };\n  ReactAce.prototype.onBlur = function (event) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event, this.editor);\n    }\n  };\n  ReactAce.prototype.onCopy = function (_a) {\n    var text = _a.text;\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  };\n  ReactAce.prototype.onPaste = function (_a) {\n    var text = _a.text;\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  };\n  ReactAce.prototype.onScroll = function () {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  };\n  ReactAce.prototype.handleOptions = function (props) {\n    var setOptions = Object.keys(props.setOptions);\n    for (var y = 0; y < setOptions.length; y++) {\n      // @ts-ignore\n      this.editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n    }\n  };\n  ReactAce.prototype.handleMarkers = function (markers) {\n    var _this = this;\n    // remove foreground markers\n    var currentMarkers = this.editor.getSession().getMarkers(true);\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers except active line marker and selected word marker\n    currentMarkers = this.editor.getSession().getMarkers(false);\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i) && currentMarkers[i].clazz !== \"ace_active-line\" && currentMarkers[i].clazz !== \"ace_selected-word\") {\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(function (_a) {\n      var startRow = _a.startRow,\n        startCol = _a.startCol,\n        endRow = _a.endRow,\n        endCol = _a.endCol,\n        className = _a.className,\n        type = _a.type,\n        _b = _a.inFront,\n        inFront = _b === void 0 ? false : _b;\n      var range = new ace_builds_1.Range(startRow, startCol, endRow, endCol);\n      _this.editor.getSession().addMarker(range, className, type, inFront);\n    });\n  };\n  ReactAce.prototype.updatePlaceholder = function () {\n    // Adapted from https://stackoverflow.com/questions/26695708/how-can-i-add-placeholder-text-when-the-editor-is-empty\n    var editor = this.editor;\n    var placeholder = this.props.placeholder;\n    var showPlaceholder = !editor.session.getValue().length;\n    var node = editor.renderer.placeholderNode;\n    if (!showPlaceholder && node) {\n      editor.renderer.scroller.removeChild(editor.renderer.placeholderNode);\n      editor.renderer.placeholderNode = null;\n    } else if (showPlaceholder && !node) {\n      node = editor.renderer.placeholderNode = document.createElement(\"div\");\n      node.textContent = placeholder || \"\";\n      node.className = \"ace_comment ace_placeholder\";\n      node.style.padding = \"0 9px\";\n      node.style.position = \"absolute\";\n      node.style.zIndex = \"3\";\n      editor.renderer.scroller.appendChild(node);\n    } else if (showPlaceholder && node) {\n      node.textContent = placeholder;\n    }\n  };\n  ReactAce.prototype.updateRef = function (item) {\n    this.refEditor = item;\n  };\n  ReactAce.prototype.render = function () {\n    var _a = this.props,\n      name = _a.name,\n      width = _a.width,\n      height = _a.height,\n      style = _a.style;\n    var divStyle = __assign({\n      width: width,\n      height: height\n    }, style);\n    return React.createElement(\"div\", {\n      ref: this.updateRef,\n      id: name,\n      style: divStyle\n    });\n  };\n  ReactAce.propTypes = {\n    mode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    focus: PropTypes.bool,\n    theme: PropTypes.string,\n    name: PropTypes.string,\n    className: PropTypes.string,\n    height: PropTypes.string,\n    width: PropTypes.string,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    showGutter: PropTypes.bool,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onPaste: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onBlur: PropTypes.func,\n    onScroll: PropTypes.func,\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    onLoad: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    onValidate: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    debounceChangePeriod: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableSnippets: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    enableLiveAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    navigateToFileEnd: PropTypes.bool,\n    commands: PropTypes.array,\n    placeholder: PropTypes.string\n  };\n  ReactAce.defaultProps = {\n    name: \"ace-editor\",\n    focus: false,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    fontSize: 12,\n    enableSnippets: false,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false,\n    placeholder: null,\n    navigateToFileEnd: true\n  };\n  return ReactAce;\n}(React.Component);\nexports.default = ReactAce;","map":{"version":3,"mappings":"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","names":["isEqual","require","ace","__extends","props","_super","editorOptions_1","forEach","_this","method","bind","debounce","ReactAce","node","parent","parentNode","toString","className","onBeforeLoad","onValidate","mode","focus","theme","fontSize","value","defaultValue","showGutter","wrapEnabled","showPrintMargin","_b","scrollMargin","keyboardHandler","onLoad","commands","annotations","markers","placeholder","editor","edit","refEditor","editorProps","Object","keys","i","length","debounceChangePeriod","onChange","renderer","setScrollMargin","isInShadow","attachToShadowRoot","getSession","setMode","setTheme","setFontSize","setValue","navigateToFileEnd","navigateFileEnd","setShowGutter","setUseWrapMode","setShowPrintMargin","on","onFocus","onBlur","onCopy","onPaste","onInput","updatePlaceholder","selection","onSelectionChange","onCursorChange","getAnnotations","session","onScroll","setAnnotations","handleMarkers","availableOptions","$options","hasOwnProperty","option","setOption","console","warn","handleOptions","Array","isArray","command","exec","bindKey","addCommand","setKeyboardHandler","resize","prevProps","oldProps","nextProps","appliedClasses","appliedClassesArray_1","trim","split","oldClassesArray","index","indexOf","oldClass","splice","join","valueChanged","getValue","silent","pos","toJSON","cursorStart","fromJSON","setOptions","handleScrollMargins","height","width","margins","destroy","event","getSelection","_a","text","y","currentMarkers","getMarkers","removeMarker","id","clazz","startRow","startCol","endRow","endCol","type","inFront","range","ace_builds_1","addMarker","showPlaceholder","placeholderNode","scroller","removeChild","document","createElement","textContent","style","padding","position","zIndex","appendChild","item","name","divStyle","React","ref","updateRef","PropTypes","oneOfType","string","object","bool","number","func","minLines","maxLines","readOnly","highlightActiveLine","tabSize","array","enableSnippets","enableBasicAutocompletion","enableLiveAutocompletion","Component"],"sources":["E:\\project\\essIDE\\frontend\\node_modules\\react-ace\\src\\ace.tsx"],"sourcesContent":["import { Ace, Range } from \"ace-builds\";\r\nimport * as AceBuilds from \"ace-builds\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport * as React from \"react\";\r\nconst isEqual = require(\"lodash.isequal\");\r\nimport {\r\n  debounce,\r\n  editorEvents,\r\n  editorOptions,\r\n  getAceInstance\r\n} from \"./editorOptions\";\r\nconst ace = getAceInstance();\r\n\r\nimport {\r\n  IAceEditor,\r\n  IAceOptions,\r\n  ICommand,\r\n  IEditorProps,\r\n  IMarker\r\n} from \"./types\";\r\n/**\r\n * See https://github.com/ajaxorg/ace/wiki/Configuring-Ace\r\n */\r\n\r\nexport interface IAceEditorProps {\r\n  name?: string;\r\n  style?: React.CSSProperties;\r\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\r\n  mode?: string | object;\r\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\r\n  theme?: string;\r\n  height?: string;\r\n  width?: string;\r\n  className?: string;\r\n  fontSize?: number | string;\r\n  showGutter?: boolean;\r\n  showPrintMargin?: boolean;\r\n  highlightActiveLine?: boolean;\r\n  focus?: boolean;\r\n  cursorStart?: number;\r\n  wrapEnabled?: boolean;\r\n  readOnly?: boolean;\r\n  minLines?: number;\r\n  maxLines?: number;\r\n  navigateToFileEnd?: boolean;\r\n  debounceChangePeriod?: number;\r\n  enableBasicAutocompletion?: boolean | string[];\r\n  enableLiveAutocompletion?: boolean | string[];\r\n  tabSize?: number;\r\n  value?: string;\r\n  placeholder?: string;\r\n  defaultValue?: string;\r\n  scrollMargin?: number[];\r\n  enableSnippets?: boolean;\r\n  onSelectionChange?: (value: any, event?: any) => void;\r\n  onCursorChange?: (value: any, event?: any) => void;\r\n  onInput?: (event?: any) => void;\r\n  onLoad?: (editor: Ace.Editor) => void;\r\n  onValidate?: (annotations: Ace.Annotation[]) => void;\r\n  onBeforeLoad?: (ace: typeof AceBuilds) => void;\r\n  onChange?: (value: string, event?: any) => void;\r\n  onSelection?: (selectedText: string, event?: any) => void;\r\n  onCopy?: (value: string) => void;\r\n  onPaste?: (value: string) => void;\r\n  onFocus?: (event: any, editor?: Ace.Editor) => void;\r\n  onBlur?: (event: any, editor?: Ace.Editor) => void;\r\n  onScroll?: (editor: IEditorProps) => void;\r\n  editorProps?: IEditorProps;\r\n  setOptions?: IAceOptions;\r\n  keyboardHandler?: string;\r\n  commands?: ICommand[];\r\n  annotations?: Ace.Annotation[];\r\n  markers?: IMarker[];\r\n}\r\n\r\nexport default class ReactAce extends React.Component<IAceEditorProps> {\r\n  public static propTypes: PropTypes.ValidationMap<IAceEditorProps> = {\r\n    mode: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n    focus: PropTypes.bool,\r\n    theme: PropTypes.string,\r\n    name: PropTypes.string,\r\n    className: PropTypes.string,\r\n    height: PropTypes.string,\r\n    width: PropTypes.string,\r\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    showGutter: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    onCopy: PropTypes.func,\r\n    onPaste: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onInput: PropTypes.func,\r\n    onBlur: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    value: PropTypes.string,\r\n    defaultValue: PropTypes.string,\r\n    onLoad: PropTypes.func,\r\n    onSelectionChange: PropTypes.func,\r\n    onCursorChange: PropTypes.func,\r\n    onBeforeLoad: PropTypes.func,\r\n    onValidate: PropTypes.func,\r\n    minLines: PropTypes.number,\r\n    maxLines: PropTypes.number,\r\n    readOnly: PropTypes.bool,\r\n    highlightActiveLine: PropTypes.bool,\r\n    tabSize: PropTypes.number,\r\n    showPrintMargin: PropTypes.bool,\r\n    cursorStart: PropTypes.number,\r\n    debounceChangePeriod: PropTypes.number,\r\n    editorProps: PropTypes.object,\r\n    setOptions: PropTypes.object,\r\n    style: PropTypes.object,\r\n    scrollMargin: PropTypes.array,\r\n    annotations: PropTypes.array,\r\n    markers: PropTypes.array,\r\n    keyboardHandler: PropTypes.string,\r\n    wrapEnabled: PropTypes.bool,\r\n    enableSnippets: PropTypes.bool,\r\n    enableBasicAutocompletion: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.array\r\n    ]),\r\n    enableLiveAutocompletion: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.array\r\n    ]),\r\n    navigateToFileEnd: PropTypes.bool,\r\n    commands: PropTypes.array,\r\n    placeholder: PropTypes.string\r\n  };\r\n  public static defaultProps: Partial<IAceEditorProps> = {\r\n    name: \"ace-editor\",\r\n    focus: false,\r\n    mode: \"\",\r\n    theme: \"\",\r\n    height: \"500px\",\r\n    width: \"500px\",\r\n    fontSize: 12,\r\n    enableSnippets: false,\r\n    showGutter: true,\r\n    onChange: null,\r\n    onPaste: null,\r\n    onLoad: null,\r\n    onScroll: null,\r\n    minLines: null,\r\n    maxLines: null,\r\n    readOnly: false,\r\n    highlightActiveLine: true,\r\n    showPrintMargin: true,\r\n    tabSize: 4,\r\n    cursorStart: 1,\r\n    editorProps: {},\r\n    style: {},\r\n    scrollMargin: [0, 0, 0, 0],\r\n    setOptions: {},\r\n    wrapEnabled: false,\r\n    enableBasicAutocompletion: false,\r\n    enableLiveAutocompletion: false,\r\n    placeholder: null,\r\n    navigateToFileEnd: true\r\n  };\r\n  public editor: IAceEditor;\r\n  public refEditor: HTMLElement;\r\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\r\n  // [index: string]: any;\r\n  public silent: boolean;\r\n  constructor(props: IAceEditorProps) {\r\n    super(props);\r\n    editorEvents.forEach(method => {\r\n      this[method] = this[method].bind(this);\r\n    });\r\n    this.debounce = debounce;\r\n  }\r\n  public isInShadow(node: HTMLElement): boolean {\r\n    let parent = node && node.parentNode;\r\n    while (parent) {\r\n      if (parent.toString() === \"[object ShadowRoot]\") {\r\n        return true;\r\n      }\r\n      parent = parent.parentNode;\r\n    }\r\n    return false;\r\n  }\r\n  public componentDidMount() {\r\n    const {\r\n      className,\r\n      onBeforeLoad,\r\n      onValidate,\r\n      mode,\r\n      focus,\r\n      theme,\r\n      fontSize,\r\n      value,\r\n      defaultValue,\r\n      showGutter,\r\n      wrapEnabled,\r\n      showPrintMargin,\r\n      scrollMargin = [0, 0, 0, 0],\r\n      keyboardHandler,\r\n      onLoad,\r\n      commands,\r\n      annotations,\r\n      markers,\r\n      placeholder\r\n    } = this.props;\r\n\r\n    this.editor = ace.edit(this.refEditor);\r\n\r\n    if (onBeforeLoad) {\r\n      onBeforeLoad(ace);\r\n    }\r\n\r\n    const editorProps = Object.keys(this.props.editorProps);\r\n    for (let i = 0; i < editorProps.length; i++) {\r\n      this.editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\r\n    }\r\n    if (this.props.debounceChangePeriod) {\r\n      this.onChange = this.debounce(\r\n        this.onChange,\r\n        this.props.debounceChangePeriod\r\n      );\r\n    }\r\n    this.editor.renderer.setScrollMargin(\r\n      scrollMargin[0],\r\n      scrollMargin[1],\r\n      scrollMargin[2],\r\n      scrollMargin[3]\r\n    );\r\n    if (this.isInShadow(this.refEditor)) {\r\n      this.editor.renderer.attachToShadowRoot();\r\n    }\r\n    this.editor\r\n      .getSession()\r\n      .setMode(\r\n        typeof mode === \"string\" ? `ace/mode/${mode}` : (mode as Ace.SyntaxMode)\r\n      );\r\n    if(theme && theme !== \"\")\r\n      this.editor.setTheme(`ace/theme/${theme}`);\r\n    this.editor.setFontSize(\r\n      typeof fontSize === \"number\" ? `${fontSize}px` : fontSize\r\n    );\r\n    this.editor\r\n      .getSession()\r\n      .setValue(!defaultValue ? value || \"\" : defaultValue);\r\n\r\n    if (this.props.navigateToFileEnd) {\r\n      this.editor.navigateFileEnd();\r\n    }\r\n    this.editor.renderer.setShowGutter(showGutter);\r\n    this.editor.getSession().setUseWrapMode(wrapEnabled);\r\n    this.editor.setShowPrintMargin(showPrintMargin);\r\n    this.editor.on(\"focus\", this.onFocus);\r\n    this.editor.on(\"blur\", this.onBlur);\r\n    this.editor.on(\"copy\", this.onCopy);\r\n    this.editor.on(\"paste\", this.onPaste);\r\n    this.editor.on(\"change\", this.onChange);\r\n    this.editor.on(\"input\", this.onInput);\r\n    if (placeholder) {\r\n      this.updatePlaceholder();\r\n    }\r\n    this.editor\r\n      .getSession()\r\n      .selection.on(\"changeSelection\", this.onSelectionChange);\r\n    this.editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\r\n    if (onValidate) {\r\n      // @ts-ignore types don't include\r\n      this.editor.getSession().on(\"changeAnnotation\", () => {\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        const annotations = this.editor.getSession().getAnnotations();\r\n        this.props.onValidate(annotations);\r\n      });\r\n    }\r\n    this.editor.session.on(\"changeScrollTop\", this.onScroll);\r\n    this.editor.getSession().setAnnotations(annotations || []);\r\n    if (markers && markers.length > 0) {\r\n      this.handleMarkers(markers);\r\n    }\r\n\r\n    // get a list of possible options to avoid 'misspelled option errors'\r\n    const availableOptions = this.editor.$options;\r\n    editorOptions.forEach(option => {\r\n      if (availableOptions.hasOwnProperty(option)) {\r\n        // @ts-ignore\r\n        this.editor.setOption(option, this.props[option]);\r\n      } else if (this.props[option]) {\r\n        console.warn(\r\n          `ReactAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\r\n        );\r\n      }\r\n    });\r\n\r\n    this.handleOptions(this.props);\r\n\r\n    if (Array.isArray(commands)) {\r\n      commands.forEach(command => {\r\n        if (typeof command.exec === \"string\") {\r\n          (this.editor.commands as any).bindKey(command.bindKey, command.exec);\r\n        } else {\r\n          (this.editor.commands as any).addCommand(command);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (keyboardHandler) {\r\n      this.editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\r\n    }\r\n\r\n    if (className) {\r\n      this.refEditor.className += \" \" + className;\r\n    }\r\n\r\n    if (onLoad) {\r\n      onLoad(this.editor);\r\n    }\r\n\r\n    this.editor.resize();\r\n\r\n    if (focus) {\r\n      this.editor.focus();\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IAceEditorProps) {\r\n    const oldProps = prevProps;\r\n    const nextProps = this.props;\r\n\r\n    for (let i = 0; i < editorOptions.length; i++) {\r\n      const option = editorOptions[i];\r\n      if (nextProps[option] !== oldProps[option]) {\r\n        // @ts-ignore\r\n        this.editor.setOption(option, nextProps[option]);\r\n      }\r\n    }\r\n\r\n    if (nextProps.className !== oldProps.className) {\r\n      const appliedClasses = this.refEditor.className;\r\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\r\n      const oldClassesArray = oldProps.className.trim().split(\" \");\r\n      oldClassesArray.forEach(oldClass => {\r\n        const index = appliedClassesArray.indexOf(oldClass);\r\n        appliedClassesArray.splice(index, 1);\r\n      });\r\n      this.refEditor.className =\r\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\r\n    }\r\n\r\n    // First process editor value, as it may create a new session (see issue #300)\r\n    const valueChanged = this.editor &&\r\n      nextProps.value != null &&\r\n      this.editor.getValue() !== nextProps.value;\r\n\r\n    if (valueChanged) {\r\n      // editor.setValue is a synchronous function call, change event is emitted before setValue return.\r\n      this.silent = true;\r\n      const pos = this.editor.session.selection.toJSON();\r\n      this.editor.setValue(nextProps.value, nextProps.cursorStart);\r\n      this.editor.session.selection.fromJSON(pos);\r\n      this.silent = false;\r\n    }\r\n\r\n    if (nextProps.placeholder !== oldProps.placeholder) {\r\n      this.updatePlaceholder();\r\n    }\r\n    if (nextProps.mode !== oldProps.mode) {\r\n      this.editor\r\n        .getSession()\r\n        .setMode(\r\n          typeof nextProps.mode === \"string\"\r\n            ? `ace/mode/${nextProps.mode}`\r\n            : (nextProps.mode as Ace.SyntaxMode)\r\n        );\r\n    }\r\n    if (nextProps.theme !== oldProps.theme) {\r\n      this.editor.setTheme(\"ace/theme/\" + nextProps.theme);\r\n    }\r\n    if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\r\n      if (nextProps.keyboardHandler) {\r\n        this.editor.setKeyboardHandler(\r\n          \"ace/keyboard/\" + nextProps.keyboardHandler\r\n        );\r\n      } else {\r\n        this.editor.setKeyboardHandler(null);\r\n      }\r\n    }\r\n    if (nextProps.fontSize !== oldProps.fontSize) {\r\n      this.editor.setFontSize(\r\n        typeof nextProps.fontSize === \"number\"\r\n          ? `${nextProps.fontSize}px`\r\n          : nextProps.fontSize\r\n      );\r\n    }\r\n    if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\r\n      this.editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\r\n    }\r\n    if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\r\n      this.editor.setShowPrintMargin(nextProps.showPrintMargin);\r\n    }\r\n    if (nextProps.showGutter !== oldProps.showGutter) {\r\n      this.editor.renderer.setShowGutter(nextProps.showGutter);\r\n    }\r\n    if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\r\n      this.handleOptions(nextProps);\r\n    }\r\n    // if the value or annotations changed, set the annotations\r\n    // changing the value may create create a new session which will require annotations to be re-set\r\n    if (valueChanged || !isEqual(nextProps.annotations, oldProps.annotations)) {\r\n      this.editor.getSession().setAnnotations(nextProps.annotations || []);\r\n    }\r\n    if (\r\n      !isEqual(nextProps.markers, oldProps.markers) &&\r\n      Array.isArray(nextProps.markers)\r\n    ) {\r\n      this.handleMarkers(nextProps.markers);\r\n    }\r\n\r\n    // this doesn't look like it works at all....\r\n    if (!isEqual(nextProps.scrollMargin, oldProps.scrollMargin)) {\r\n      this.handleScrollMargins(nextProps.scrollMargin);\r\n    }\r\n\r\n    if (\r\n      prevProps.height !== this.props.height ||\r\n      prevProps.width !== this.props.width\r\n    ) {\r\n      this.editor.resize();\r\n    }\r\n    if (this.props.focus && !prevProps.focus) {\r\n      this.editor.focus();\r\n    }\r\n  }\r\n\r\n  public handleScrollMargins(margins = [0, 0, 0, 0]) {\r\n    this.editor.renderer.setScrollMargin(\r\n      margins[0],\r\n      margins[1],\r\n      margins[2],\r\n      margins[3]\r\n    );\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    if (this.editor) {\r\n      this.editor.destroy();\r\n      this.editor = null;\r\n    }\r\n  }\r\n\r\n  public onChange(event: any) {\r\n    if (this.props.onChange && !this.silent) {\r\n      const value = this.editor.getValue();\r\n      this.props.onChange(value, event);\r\n    }\r\n  }\r\n\r\n  public onSelectionChange(event: any) {\r\n    if (this.props.onSelectionChange) {\r\n      const value = this.editor.getSelection();\r\n      this.props.onSelectionChange(value, event);\r\n    }\r\n  }\r\n  public onCursorChange(event: any) {\r\n    if (this.props.onCursorChange) {\r\n      const value = this.editor.getSelection();\r\n      this.props.onCursorChange(value, event);\r\n    }\r\n  }\r\n  public onInput(event?: any) {\r\n    if (this.props.onInput) {\r\n      this.props.onInput(event);\r\n    }\r\n    if (this.props.placeholder) {\r\n      this.updatePlaceholder();\r\n    }\r\n  }\r\n  public onFocus(event: any) {\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(event, this.editor);\r\n    }\r\n  }\r\n\r\n  public onBlur(event: any) {\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(event, this.editor);\r\n    }\r\n  }\r\n\r\n  public onCopy({ text }: { text: string }) {\r\n    if (this.props.onCopy) {\r\n      this.props.onCopy(text);\r\n    }\r\n  }\r\n\r\n  public onPaste({ text }: { text: string }) {\r\n    if (this.props.onPaste) {\r\n      this.props.onPaste(text);\r\n    }\r\n  }\r\n\r\n  public onScroll() {\r\n    if (this.props.onScroll) {\r\n      this.props.onScroll(this.editor);\r\n    }\r\n  }\r\n\r\n  public handleOptions(props: IAceEditorProps) {\r\n    const setOptions = Object.keys(props.setOptions);\r\n    for (let y = 0; y < setOptions.length; y++) {\r\n      // @ts-ignore\r\n      this.editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\r\n    }\r\n  }\r\n\r\n  public handleMarkers(markers: IMarker[]) {\r\n    // remove foreground markers\r\n    let currentMarkers = this.editor.getSession().getMarkers(true);\r\n    for (const i in currentMarkers) {\r\n      if (currentMarkers.hasOwnProperty(i)) {\r\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\r\n      }\r\n    }\r\n    // remove background markers except active line marker and selected word marker\r\n    currentMarkers = this.editor.getSession().getMarkers(false);\r\n    for (const i in currentMarkers) {\r\n      if (\r\n        currentMarkers.hasOwnProperty(i) &&\r\n        currentMarkers[i].clazz !== \"ace_active-line\" &&\r\n        currentMarkers[i].clazz !== \"ace_selected-word\"\r\n      ) {\r\n        this.editor.getSession().removeMarker(currentMarkers[i].id);\r\n      }\r\n    }\r\n    // add new markers\r\n    markers.forEach(\r\n      ({\r\n        startRow,\r\n        startCol,\r\n        endRow,\r\n        endCol,\r\n        className,\r\n        type,\r\n        inFront = false\r\n      }) => {\r\n        const range = new Range(startRow, startCol, endRow, endCol);\r\n        this.editor.getSession().addMarker(range, className, type, inFront);\r\n      }\r\n    );\r\n  }\r\n\r\n  public updatePlaceholder() {\r\n    // Adapted from https://stackoverflow.com/questions/26695708/how-can-i-add-placeholder-text-when-the-editor-is-empty\r\n\r\n    const editor = this.editor;\r\n    const { placeholder } = this.props;\r\n\r\n    const showPlaceholder = !editor.session.getValue().length;\r\n    let node = editor.renderer.placeholderNode;\r\n\r\n    if (!showPlaceholder && node) {\r\n      editor.renderer.scroller.removeChild(editor.renderer.placeholderNode);\r\n      editor.renderer.placeholderNode = null;\r\n    } else if (showPlaceholder && !node) {\r\n      node = editor.renderer.placeholderNode = document.createElement(\"div\");\r\n      node.textContent = placeholder || \"\";\r\n      node.className = \"ace_comment ace_placeholder\";\r\n      node.style.padding = \"0 9px\";\r\n      node.style.position = \"absolute\";\r\n      node.style.zIndex = \"3\";\r\n      editor.renderer.scroller.appendChild(node);\r\n    } else if (showPlaceholder && node) {\r\n      node.textContent = placeholder;\r\n    }\r\n  }\r\n\r\n  public updateRef(item: HTMLElement) {\r\n    this.refEditor = item;\r\n  }\r\n\r\n  public render() {\r\n    const { name, width, height, style } = this.props;\r\n    const divStyle = { width, height, ...style };\r\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}