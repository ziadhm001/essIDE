{"ast":null,"code":"var _jsxFileName = \"E:\\\\project\\\\essIDE\\\\frontend\\\\src\\\\components\\\\Play\\\\Play.js\",\n  _s = $RefreshSig$();\nimport AceEditor from \"react-ace\";\nimport Sidebar from '../Sidebar/Sidebar';\nimport NavbarPlay from '../NavbarPlay/NavbarPlay';\nimport Axios from 'axios';\nimport { useState } from 'react';\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-one_dark\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Play = props => {\n  _s();\n  const sendData = async body => {\n    Axios.post(\"http://localhost:3001/playData\", body).then(response => {\n      console.log(response);\n      //setUserActions(response.data);\n    });\n  };\n\n  const setInitials = async body => {\n    Axios.post(\"http://localhost:3001/play\", body).then(response => {\n\n      //setRecordText(response.data.codeStart);\n    });\n  };\n  setInitials();\n  sendData();\n  const [textInIDE, setTextInIDE] = useState(props.defaultVal);\n  const [recordText, setRecordText] = useState(props.defaultVal);\n  let [userActions, setUserActions] = useState([]);\n  let counter = 0;\n  const playHandler = () => {\n    setTextInIDE(recordText);\n    let lines = recordText.split('\\n');\n    const playRecursive = () => {\n      setTimeout(() => {\n        counter++;\n        lines[userActions[counter]['start'].row] = lines[userActions[counter]['start'].row].slice(0, userActions[counter]['start'].column) + userActions[counter]['lines'] + lines[userActions[counter]['start'].row].slice(userActions[counter]['start'].column);\n        lines = lines.join('\\n');\n        setTextInIDE(lines);\n        lines = lines.split('\\n');\n        if (counter !== userActions.length) playRecursive();\n      }, userActions[counter + 1].timestamp - userActions[counter].timestamp);\n    };\n    playRecursive();\n  };\n  const editorChangeHandler = (value, event) => {\n    console.log(userActions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavbarPlay, {\n      playHandler: playHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-flex',\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#282c34'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        textInIDE: textInIDE,\n        setTextInIDE: setTextInIDE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(AceEditor, {\n        mode: \"javascript\",\n        theme: \"one_dark\",\n        height: \"100vh\",\n        width: \"200vh\",\n        onChange: editorChangeHandler,\n        value: textInIDE,\n        defaultValue: props.defaultVal,\n        fontSize: 26,\n        setOptions: {\n          enableBasicAutocompletion: true,\n          enableLiveAutocompletion: true,\n          enableSnippets: true\n        },\n        name: \"UNIQUE_ID_OF_DIV\",\n        editorProps: {\n          $blockScrolling: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Play, \"y5dmZu+p5wcJhxMCCsd3Vf6Ebvg=\");\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["AceEditor","Sidebar","NavbarPlay","Axios","useState","Play","props","sendData","body","post","then","response","console","log","setInitials","textInIDE","setTextInIDE","defaultVal","recordText","setRecordText","userActions","setUserActions","counter","playHandler","lines","split","playRecursive","setTimeout","row","slice","column","join","length","timestamp","editorChangeHandler","value","event","display","height","width","backgroundColor","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","$blockScrolling"],"sources":["E:/project/essIDE/frontend/src/components/Play/Play.js"],"sourcesContent":["import AceEditor from \"react-ace\";\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport NavbarPlay from '../NavbarPlay/NavbarPlay';\r\nimport Axios from 'axios';\r\nimport { useState } from 'react';\r\nimport \"ace-builds/src-noconflict/mode-javascript\";\r\nimport \"ace-builds/src-noconflict/theme-one_dark\";\r\nimport \"ace-builds/src-noconflict/ext-language_tools\";\r\nconst Play = (props) => {\r\n  const sendData = async (body) => {\r\n      Axios.post(\"http://localhost:3001/playData\",body).then(response=>{\r\n        console.log(response);\r\n      //setUserActions(response.data);\r\n    })\r\n}\r\n  const setInitials = async (body) => {\r\n    Axios.post(\"http://localhost:3001/play\",body).then(response=>{\r\n\r\n      //setRecordText(response.data.codeStart);\r\n  })\r\n  }\r\n  setInitials();\r\n  sendData();\r\n  const [textInIDE, setTextInIDE] = useState(props.defaultVal);\r\n  const [recordText, setRecordText] = useState(props.defaultVal);\r\n  let [userActions, setUserActions] = useState([]);\r\n  let counter = 0;\r\n\r\n  const playHandler = () => {\r\n    setTextInIDE(recordText);\r\n    let lines = recordText.split('\\n');\r\n    const playRecursive = () => {\r\n      setTimeout(()=>{\r\n        counter++;\r\n        lines[userActions[counter]['start'].row] = lines[userActions[counter]['start'].row].slice(0,userActions[counter]['start'].column) + userActions[counter]['lines'] + lines[userActions[counter]['start'].row].slice(userActions[counter]['start'].column);\r\n        lines = lines.join('\\n');\r\n        setTextInIDE(lines);\r\n        lines = lines.split('\\n')\r\n        if(counter !== userActions.length)\r\n          playRecursive();\r\n      },userActions[counter+1].timestamp - userActions[counter].timestamp);\r\n    }\r\n    playRecursive();\r\n  }\r\n  const editorChangeHandler= (value,event) => {\r\n      console.log(userActions)\r\n  }\r\n    return(\r\n        <div>\r\n            <NavbarPlay playHandler={playHandler} />\r\n            <div style={{ display: 'inline-flex', height: '100%' , width: '100%', backgroundColor:'#282c34'}}>\r\n              <Sidebar textInIDE={textInIDE} setTextInIDE={setTextInIDE}/>\r\n              <AceEditor\r\n              mode=\"javascript\"\r\n              theme=\"one_dark\"\r\n              height='100vh'\r\n              width='200vh'\r\n              onChange={editorChangeHandler}\r\n              value={textInIDE}\r\n              defaultValue= {props.defaultVal}\r\n              fontSize= {26}\r\n              setOptions={{\r\n                enableBasicAutocompletion: true,\r\n                enableLiveAutocompletion: true,\r\n                enableSnippets: true,\r\n              }}  \r\n              \r\n              name=\"UNIQUE_ID_OF_DIV\"\r\n              editorProps={{ $blockScrolling: true }}\r\n            />\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Play;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}