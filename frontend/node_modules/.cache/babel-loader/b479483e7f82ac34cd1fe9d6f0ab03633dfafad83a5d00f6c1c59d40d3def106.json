{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar editorOptions_1 = require(\"./editorOptions\");\nvar ace = (0, editorOptions_1.getAceInstance)();\nvar ace_builds_1 = require(\"ace-builds\");\nvar ext_split_1 = require(\"ace-builds/src-noconflict/ext-split\");\nvar PropTypes = require(\"prop-types\");\nvar React = require(\"react\");\nvar isEqual = require(\"lodash.isequal\");\nvar get = require(\"lodash.get\");\nvar SplitComponent = /** @class */function (_super) {\n  __extends(SplitComponent, _super);\n  function SplitComponent(props) {\n    var _this = _super.call(this, props) || this;\n    editorOptions_1.editorEvents.forEach(function (method) {\n      _this[method] = _this[method].bind(_this);\n    });\n    _this.debounce = editorOptions_1.debounce;\n    return _this;\n  }\n  SplitComponent.prototype.isInShadow = function (node) {\n    var parent = node && node.parentNode;\n    while (parent) {\n      if (parent.toString() === \"[object ShadowRoot]\") {\n        return true;\n      }\n      parent = parent.parentNode;\n    }\n    return false;\n  };\n  SplitComponent.prototype.componentDidMount = function () {\n    var _this = this;\n    var _a = this.props,\n      className = _a.className,\n      onBeforeLoad = _a.onBeforeLoad,\n      mode = _a.mode,\n      focus = _a.focus,\n      theme = _a.theme,\n      fontSize = _a.fontSize,\n      value = _a.value,\n      defaultValue = _a.defaultValue,\n      cursorStart = _a.cursorStart,\n      showGutter = _a.showGutter,\n      wrapEnabled = _a.wrapEnabled,\n      showPrintMargin = _a.showPrintMargin,\n      _b = _a.scrollMargin,\n      scrollMargin = _b === void 0 ? [0, 0, 0, 0] : _b,\n      keyboardHandler = _a.keyboardHandler,\n      onLoad = _a.onLoad,\n      commands = _a.commands,\n      annotations = _a.annotations,\n      markers = _a.markers,\n      splits = _a.splits;\n    this.editor = ace.edit(this.refEditor);\n    if (this.isInShadow(this.refEditor)) {\n      this.editor.renderer.attachToShadowRoot();\n    }\n    this.editor.setTheme(\"ace/theme/\".concat(theme));\n    if (onBeforeLoad) {\n      onBeforeLoad(ace);\n    }\n    var editorProps = Object.keys(this.props.editorProps);\n    var split = new ext_split_1.Split(this.editor.container, \"ace/theme/\".concat(theme), splits);\n    this.editor.env.split = split;\n    this.splitEditor = split.getEditor(0);\n    this.split = split;\n    // in a split scenario we don't want a print margin for the entire application\n    this.editor.setShowPrintMargin(false);\n    this.editor.renderer.setShowGutter(false);\n    // get a list of possible options to avoid 'misspelled option errors'\n    var availableOptions = this.splitEditor.$options;\n    if (this.props.debounceChangePeriod) {\n      this.onChange = this.debounce(this.onChange, this.props.debounceChangePeriod);\n    }\n    split.forEach(function (editor, index) {\n      for (var i = 0; i < editorProps.length; i++) {\n        editor[editorProps[i]] = _this.props.editorProps[editorProps[i]];\n      }\n      var defaultValueForEditor = get(defaultValue, index);\n      var valueForEditor = get(value, index, \"\");\n      editor.session.setUndoManager(new ace.UndoManager());\n      editor.setTheme(\"ace/theme/\".concat(theme));\n      editor.renderer.setScrollMargin(scrollMargin[0], scrollMargin[1], scrollMargin[2], scrollMargin[3]);\n      editor.getSession().setMode(\"ace/mode/\".concat(mode));\n      editor.setFontSize(fontSize);\n      editor.renderer.setShowGutter(showGutter);\n      editor.getSession().setUseWrapMode(wrapEnabled);\n      editor.setShowPrintMargin(showPrintMargin);\n      editor.on(\"focus\", _this.onFocus);\n      editor.on(\"blur\", _this.onBlur);\n      editor.on(\"input\", _this.onInput);\n      editor.on(\"copy\", _this.onCopy);\n      editor.on(\"paste\", _this.onPaste);\n      editor.on(\"change\", _this.onChange);\n      editor.getSession().selection.on(\"changeSelection\", _this.onSelectionChange);\n      editor.getSession().selection.on(\"changeCursor\", _this.onCursorChange);\n      editor.session.on(\"changeScrollTop\", _this.onScroll);\n      editor.setValue(defaultValueForEditor === undefined ? valueForEditor : defaultValueForEditor, cursorStart);\n      var newAnnotations = get(annotations, index, []);\n      var newMarkers = get(markers, index, []);\n      editor.getSession().setAnnotations(newAnnotations);\n      if (newMarkers && newMarkers.length > 0) {\n        _this.handleMarkers(newMarkers, editor);\n      }\n      for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n        var option = editorOptions_1.editorOptions[i];\n        if (availableOptions.hasOwnProperty(option)) {\n          editor.setOption(option, _this.props[option]);\n        } else if (_this.props[option]) {\n          console.warn(\"ReaceAce: editor option \".concat(option, \" was activated but not found. Did you need to import a related tool or did you possibly mispell the option?\"));\n        }\n      }\n      _this.handleOptions(_this.props, editor);\n      if (Array.isArray(commands)) {\n        commands.forEach(function (command) {\n          if (typeof command.exec === \"string\") {\n            editor.commands.bindKey(command.bindKey, command.exec);\n          } else {\n            editor.commands.addCommand(command);\n          }\n        });\n      }\n      if (keyboardHandler) {\n        editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\n      }\n    });\n    if (className) {\n      this.refEditor.className += \" \" + className;\n    }\n    if (focus) {\n      this.splitEditor.focus();\n    }\n    var sp = this.editor.env.split;\n    sp.setOrientation(this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE);\n    sp.resize(true);\n    if (onLoad) {\n      onLoad(sp);\n    }\n  };\n  SplitComponent.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n    var oldProps = prevProps;\n    var nextProps = this.props;\n    var split = this.editor.env.split;\n    if (nextProps.splits !== oldProps.splits) {\n      split.setSplits(nextProps.splits);\n    }\n    if (nextProps.orientation !== oldProps.orientation) {\n      split.setOrientation(nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE);\n    }\n    split.forEach(function (editor, index) {\n      if (nextProps.mode !== oldProps.mode) {\n        editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\n      }\n      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\n        if (nextProps.keyboardHandler) {\n          editor.setKeyboardHandler(\"ace/keyboard/\" + nextProps.keyboardHandler);\n        } else {\n          editor.setKeyboardHandler(null);\n        }\n      }\n      if (nextProps.fontSize !== oldProps.fontSize) {\n        editor.setFontSize(nextProps.fontSize);\n      }\n      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\n        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\n      }\n      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\n        editor.setShowPrintMargin(nextProps.showPrintMargin);\n      }\n      if (nextProps.showGutter !== oldProps.showGutter) {\n        editor.renderer.setShowGutter(nextProps.showGutter);\n      }\n      for (var i = 0; i < editorOptions_1.editorOptions.length; i++) {\n        var option = editorOptions_1.editorOptions[i];\n        if (nextProps[option] !== oldProps[option]) {\n          editor.setOption(option, nextProps[option]);\n        }\n      }\n      if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\n        _this.handleOptions(nextProps, editor);\n      }\n      var nextValue = get(nextProps.value, index, \"\");\n      if (editor.getValue() !== nextValue) {\n        // editor.setValue is a synchronous function call, change event is emitted before setValue return.\n        _this.silent = true;\n        var pos = editor.session.selection.toJSON();\n        editor.setValue(nextValue, nextProps.cursorStart);\n        editor.session.selection.fromJSON(pos);\n        _this.silent = false;\n      }\n      var newAnnotations = get(nextProps.annotations, index, []);\n      var oldAnnotations = get(oldProps.annotations, index, []);\n      if (!isEqual(newAnnotations, oldAnnotations)) {\n        editor.getSession().setAnnotations(newAnnotations);\n      }\n      var newMarkers = get(nextProps.markers, index, []);\n      var oldMarkers = get(oldProps.markers, index, []);\n      if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\n        _this.handleMarkers(newMarkers, editor);\n      }\n    });\n    if (nextProps.className !== oldProps.className) {\n      var appliedClasses = this.refEditor.className;\n      var appliedClassesArray_1 = appliedClasses.trim().split(\" \");\n      var oldClassesArray = oldProps.className.trim().split(\" \");\n      oldClassesArray.forEach(function (oldClass) {\n        var index = appliedClassesArray_1.indexOf(oldClass);\n        appliedClassesArray_1.splice(index, 1);\n      });\n      this.refEditor.className = \" \" + nextProps.className + \" \" + appliedClassesArray_1.join(\" \");\n    }\n    if (nextProps.theme !== oldProps.theme) {\n      split.setTheme(\"ace/theme/\" + nextProps.theme);\n    }\n    if (nextProps.focus && !oldProps.focus) {\n      this.splitEditor.focus();\n    }\n    if (nextProps.height !== this.props.height || nextProps.width !== this.props.width) {\n      this.editor.resize();\n    }\n  };\n  SplitComponent.prototype.componentWillUnmount = function () {\n    this.editor.destroy();\n    this.editor = null;\n  };\n  SplitComponent.prototype.onChange = function (event) {\n    if (this.props.onChange && !this.silent) {\n      var value_1 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_1.push(editor.getValue());\n      });\n      this.props.onChange(value_1, event);\n    }\n  };\n  SplitComponent.prototype.onSelectionChange = function (event) {\n    if (this.props.onSelectionChange) {\n      var value_2 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_2.push(editor.getSelection());\n      });\n      this.props.onSelectionChange(value_2, event);\n    }\n  };\n  SplitComponent.prototype.onCursorChange = function (event) {\n    if (this.props.onCursorChange) {\n      var value_3 = [];\n      this.editor.env.split.forEach(function (editor) {\n        value_3.push(editor.getSelection());\n      });\n      this.props.onCursorChange(value_3, event);\n    }\n  };\n  SplitComponent.prototype.onFocus = function (event) {\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n  SplitComponent.prototype.onInput = function (event) {\n    if (this.props.onInput) {\n      this.props.onInput(event);\n    }\n  };\n  SplitComponent.prototype.onBlur = function (event) {\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n  SplitComponent.prototype.onCopy = function (text) {\n    if (this.props.onCopy) {\n      this.props.onCopy(text);\n    }\n  };\n  SplitComponent.prototype.onPaste = function (text) {\n    if (this.props.onPaste) {\n      this.props.onPaste(text);\n    }\n  };\n  SplitComponent.prototype.onScroll = function () {\n    if (this.props.onScroll) {\n      this.props.onScroll(this.editor);\n    }\n  };\n  SplitComponent.prototype.handleOptions = function (props, editor) {\n    var setOptions = Object.keys(props.setOptions);\n    for (var y = 0; y < setOptions.length; y++) {\n      editor.setOption(setOptions[y], props.setOptions[setOptions[y]]);\n    }\n  };\n  SplitComponent.prototype.handleMarkers = function (markers, editor) {\n    // remove foreground markers\n    var currentMarkers = editor.getSession().getMarkers(true);\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // remove background markers\n    currentMarkers = editor.getSession().getMarkers(false);\n    for (var i in currentMarkers) {\n      if (currentMarkers.hasOwnProperty(i)) {\n        editor.getSession().removeMarker(currentMarkers[i].id);\n      }\n    }\n    // add new markers\n    markers.forEach(function (_a) {\n      var startRow = _a.startRow,\n        startCol = _a.startCol,\n        endRow = _a.endRow,\n        endCol = _a.endCol,\n        className = _a.className,\n        type = _a.type,\n        _b = _a.inFront,\n        inFront = _b === void 0 ? false : _b;\n      var range = new ace_builds_1.Range(startRow, startCol, endRow, endCol);\n      editor.getSession().addMarker(range, className, type, inFront);\n    });\n  };\n  SplitComponent.prototype.updateRef = function (item) {\n    this.refEditor = item;\n  };\n  SplitComponent.prototype.render = function () {\n    var _a = this.props,\n      name = _a.name,\n      width = _a.width,\n      height = _a.height,\n      style = _a.style;\n    var divStyle = __assign({\n      width: width,\n      height: height\n    }, style);\n    return React.createElement(\"div\", {\n      ref: this.updateRef,\n      id: name,\n      style: divStyle\n    });\n  };\n  SplitComponent.propTypes = {\n    className: PropTypes.string,\n    debounceChangePeriod: PropTypes.number,\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\n    focus: PropTypes.bool,\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.string,\n    mode: PropTypes.string,\n    name: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onCopy: PropTypes.func,\n    onFocus: PropTypes.func,\n    onInput: PropTypes.func,\n    onLoad: PropTypes.func,\n    onPaste: PropTypes.func,\n    onScroll: PropTypes.func,\n    orientation: PropTypes.string,\n    showGutter: PropTypes.bool,\n    splits: PropTypes.number,\n    theme: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.string),\n    width: PropTypes.string,\n    onSelectionChange: PropTypes.func,\n    onCursorChange: PropTypes.func,\n    onBeforeLoad: PropTypes.func,\n    minLines: PropTypes.number,\n    maxLines: PropTypes.number,\n    readOnly: PropTypes.bool,\n    highlightActiveLine: PropTypes.bool,\n    tabSize: PropTypes.number,\n    showPrintMargin: PropTypes.bool,\n    cursorStart: PropTypes.number,\n    editorProps: PropTypes.object,\n    setOptions: PropTypes.object,\n    style: PropTypes.object,\n    scrollMargin: PropTypes.array,\n    annotations: PropTypes.array,\n    markers: PropTypes.array,\n    keyboardHandler: PropTypes.string,\n    wrapEnabled: PropTypes.bool,\n    enableBasicAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    enableLiveAutocompletion: PropTypes.oneOfType([PropTypes.bool, PropTypes.array]),\n    commands: PropTypes.array\n  };\n  SplitComponent.defaultProps = {\n    name: \"ace-editor\",\n    focus: false,\n    orientation: \"beside\",\n    splits: 2,\n    mode: \"\",\n    theme: \"\",\n    height: \"500px\",\n    width: \"500px\",\n    value: [],\n    fontSize: 12,\n    showGutter: true,\n    onChange: null,\n    onPaste: null,\n    onLoad: null,\n    onScroll: null,\n    minLines: null,\n    maxLines: null,\n    readOnly: false,\n    highlightActiveLine: true,\n    showPrintMargin: true,\n    tabSize: 4,\n    cursorStart: 1,\n    editorProps: {},\n    style: {},\n    scrollMargin: [0, 0, 0, 0],\n    setOptions: {},\n    wrapEnabled: false,\n    enableBasicAutocompletion: false,\n    enableLiveAutocompletion: false\n  };\n  return SplitComponent;\n}(React.Component);\nexports.default = SplitComponent;","map":{"version":3,"mappings":"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","names":["ace","isEqual","require","get","__extends","props","_super","editorOptions_1","forEach","_this","method","bind","debounce","SplitComponent","node","parent","parentNode","toString","className","onBeforeLoad","mode","focus","theme","fontSize","value","defaultValue","cursorStart","showGutter","wrapEnabled","showPrintMargin","_b","scrollMargin","keyboardHandler","onLoad","commands","annotations","markers","splits","editor","edit","refEditor","isInShadow","renderer","attachToShadowRoot","setTheme","editorProps","Object","keys","split","ext_split_1","container","env","splitEditor","getEditor","setShowPrintMargin","setShowGutter","availableOptions","$options","debounceChangePeriod","onChange","index","i","length","defaultValueForEditor","valueForEditor","session","setUndoManager","UndoManager","setScrollMargin","getSession","setMode","setFontSize","setUseWrapMode","on","onFocus","onBlur","onInput","onCopy","onPaste","selection","onSelectionChange","onCursorChange","onScroll","setValue","undefined","newAnnotations","newMarkers","setAnnotations","handleMarkers","option","hasOwnProperty","setOption","console","warn","handleOptions","Array","isArray","command","exec","bindKey","addCommand","setKeyboardHandler","sp","setOrientation","orientation","BELOW","BESIDE","resize","prevProps","oldProps","nextProps","setSplits","setOptions","nextValue","getValue","silent","pos","toJSON","fromJSON","oldAnnotations","oldMarkers","appliedClasses","appliedClassesArray_1","trim","oldClassesArray","indexOf","oldClass","splice","join","height","width","destroy","event","value_1","push","value_2","getSelection","value_3","text","y","currentMarkers","getMarkers","removeMarker","id","_a","startRow","startCol","endRow","endCol","type","inFront","range","ace_builds_1","addMarker","item","name","style","divStyle","React","ref","updateRef","PropTypes","string","number","arrayOf","bool","oneOfType","func","minLines","maxLines","readOnly","highlightActiveLine","tabSize","object","array","enableBasicAutocompletion","enableLiveAutocompletion","Component"],"sources":["E:\\project\\essIDE\\frontend\\node_modules\\react-ace\\src\\split.tsx"],"sourcesContent":["import {\r\n  debounce,\r\n  editorEvents,\r\n  editorOptions,\r\n  getAceInstance\r\n} from \"./editorOptions\";\r\nconst ace = getAceInstance();\r\nimport { Ace, Range } from \"ace-builds\";\r\nimport Editor = Ace.Editor;\r\nimport { Split } from \"ace-builds/src-noconflict/ext-split\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport * as React from \"react\";\r\nconst isEqual = require(\"lodash.isequal\");\r\nconst get = require(\"lodash.get\");\r\nimport {\r\n  IAceOptions,\r\n  IAnnotation,\r\n  ICommand,\r\n  IEditorProps,\r\n  IMarker\r\n} from \"./types\";\r\n\r\ninterface IAceEditorClass extends Editor {\r\n  [index: string]: any;\r\n  $options?: any;\r\n}\r\n\r\nexport interface ISplitEditorProps {\r\n  [index: string]: any;\r\n  name?: string;\r\n  style?: object;\r\n  /** For available modes see https://github.com/thlorenz/brace/tree/master/mode */\r\n  mode?: string;\r\n  /** For available themes see https://github.com/thlorenz/brace/tree/master/theme */\r\n  theme?: string;\r\n  height?: string;\r\n  width?: string;\r\n  className?: string;\r\n  fontSize?: number | string;\r\n  showGutter?: boolean;\r\n  showPrintMargin?: boolean;\r\n  highlightActiveLine?: boolean;\r\n  focus?: boolean;\r\n  splits: number;\r\n  debounceChangePeriod?: number;\r\n  cursorStart?: number;\r\n  wrapEnabled?: boolean;\r\n  readOnly?: boolean;\r\n  minLines?: number;\r\n  maxLines?: number;\r\n  enableBasicAutocompletion?: boolean | string[];\r\n  enableLiveAutocompletion?: boolean | string[];\r\n  tabSize?: number;\r\n  value?: string[];\r\n  defaultValue?: string[];\r\n  scrollMargin?: number[];\r\n  orientation?: string;\r\n  onSelectionChange?: (value: any, event?: any) => void;\r\n  onCursorChange?: (value: any, event?: any) => void;\r\n  onInput?: (event?: any) => void;\r\n  onLoad?: (editor: IEditorProps) => void;\r\n  onBeforeLoad?: (ace: any) => void;\r\n  onChange?: (value: string[], event?: any) => void;\r\n  onSelection?: (selectedText: string, event?: any) => void;\r\n  onCopy?: (value: string) => void;\r\n  onPaste?: (value: string) => void;\r\n  onFocus?: (value: Event) => void;\r\n  onBlur?: (value: Event) => void;\r\n  onScroll?: (editor: IEditorProps) => void;\r\n  editorProps?: IEditorProps;\r\n  setOptions?: IAceOptions;\r\n  keyboardHandler?: string;\r\n  commands?: ICommand[];\r\n  annotations?: IAnnotation[][];\r\n  markers?: IMarker[][];\r\n}\r\n\r\nexport default class SplitComponent extends React.Component<\r\n  ISplitEditorProps,\r\n  undefined\r\n> {\r\n  [index: string]: any;\r\n\r\n  public static propTypes: PropTypes.ValidationMap<ISplitEditorProps> = {\r\n    className: PropTypes.string,\r\n    debounceChangePeriod: PropTypes.number,\r\n    defaultValue: PropTypes.arrayOf(PropTypes.string),\r\n    focus: PropTypes.bool,\r\n    fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    height: PropTypes.string,\r\n    mode: PropTypes.string,\r\n    name: PropTypes.string,\r\n    onBlur: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onCopy: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onInput: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onPaste: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    orientation: PropTypes.string,\r\n    showGutter: PropTypes.bool,\r\n    splits: PropTypes.number,\r\n    theme: PropTypes.string,\r\n    value: PropTypes.arrayOf(PropTypes.string),\r\n    width: PropTypes.string,\r\n    onSelectionChange: PropTypes.func,\r\n    onCursorChange: PropTypes.func,\r\n    onBeforeLoad: PropTypes.func,\r\n    minLines: PropTypes.number,\r\n    maxLines: PropTypes.number,\r\n    readOnly: PropTypes.bool,\r\n    highlightActiveLine: PropTypes.bool,\r\n    tabSize: PropTypes.number,\r\n    showPrintMargin: PropTypes.bool,\r\n    cursorStart: PropTypes.number,\r\n    editorProps: PropTypes.object,\r\n    setOptions: PropTypes.object,\r\n    style: PropTypes.object,\r\n    scrollMargin: PropTypes.array,\r\n    annotations: PropTypes.array,\r\n    markers: PropTypes.array,\r\n    keyboardHandler: PropTypes.string,\r\n    wrapEnabled: PropTypes.bool,\r\n    enableBasicAutocompletion: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.array\r\n    ]),\r\n    enableLiveAutocompletion: PropTypes.oneOfType([\r\n      PropTypes.bool,\r\n      PropTypes.array\r\n    ]),\r\n    commands: PropTypes.array\r\n  };\r\n  public static defaultProps: Partial<ISplitEditorProps> = {\r\n    name: \"ace-editor\",\r\n    focus: false,\r\n    orientation: \"beside\",\r\n    splits: 2,\r\n    mode: \"\",\r\n    theme: \"\",\r\n    height: \"500px\",\r\n    width: \"500px\",\r\n    value: [],\r\n    fontSize: 12,\r\n    showGutter: true,\r\n    onChange: null,\r\n    onPaste: null,\r\n    onLoad: null,\r\n    onScroll: null,\r\n    minLines: null,\r\n    maxLines: null,\r\n    readOnly: false,\r\n    highlightActiveLine: true,\r\n    showPrintMargin: true,\r\n    tabSize: 4,\r\n    cursorStart: 1,\r\n    editorProps: {},\r\n    style: {},\r\n    scrollMargin: [0, 0, 0, 0],\r\n    setOptions: {},\r\n    wrapEnabled: false,\r\n    enableBasicAutocompletion: false,\r\n    enableLiveAutocompletion: false\r\n  };\r\n  public editor: IAceEditorClass;\r\n  public refEditor: HTMLElement;\r\n  public silent: boolean;\r\n  public split: IAceEditorClass;\r\n  public splitEditor: IAceEditorClass;\r\n  public debounce: (fn: any, delay: number) => (...args: any) => void;\r\n  constructor(props: ISplitEditorProps) {\r\n    super(props);\r\n    editorEvents.forEach(method => {\r\n      this[method] = this[method].bind(this);\r\n    });\r\n    this.debounce = debounce;\r\n  }\r\n  public isInShadow(node: HTMLElement): boolean {\r\n    let parent = node && node.parentNode;\r\n    while (parent) {\r\n      if (parent.toString() === \"[object ShadowRoot]\") {\r\n        return true;\r\n      }\r\n      parent = parent.parentNode;\r\n    }\r\n    return false;\r\n  }\r\n  public componentDidMount() {\r\n    const {\r\n      className,\r\n      onBeforeLoad,\r\n      mode,\r\n      focus,\r\n      theme,\r\n      fontSize,\r\n      value,\r\n      defaultValue,\r\n      cursorStart,\r\n      showGutter,\r\n      wrapEnabled,\r\n      showPrintMargin,\r\n      scrollMargin = [0, 0, 0, 0],\r\n      keyboardHandler,\r\n      onLoad,\r\n      commands,\r\n      annotations,\r\n      markers,\r\n      splits\r\n    } = this.props;\r\n\r\n    this.editor = ace.edit(this.refEditor);\r\n    if (this.isInShadow(this.refEditor)) {\r\n      this.editor.renderer.attachToShadowRoot();\r\n    }\r\n    this.editor.setTheme(`ace/theme/${theme}`);\r\n\r\n    if (onBeforeLoad) {\r\n      onBeforeLoad(ace);\r\n    }\r\n\r\n    const editorProps = Object.keys(this.props.editorProps);\r\n\r\n    const split = new Split(\r\n      this.editor.container,\r\n      `ace/theme/${theme}`,\r\n      splits\r\n    );\r\n    this.editor.env.split = split;\r\n\r\n    this.splitEditor = split.getEditor(0);\r\n    this.split = split;\r\n    // in a split scenario we don't want a print margin for the entire application\r\n    this.editor.setShowPrintMargin(false);\r\n    this.editor.renderer.setShowGutter(false);\r\n    // get a list of possible options to avoid 'misspelled option errors'\r\n    const availableOptions = this.splitEditor.$options;\r\n    if (this.props.debounceChangePeriod) {\r\n      this.onChange = this.debounce(\r\n        this.onChange,\r\n        this.props.debounceChangePeriod\r\n      );\r\n    }\r\n    split.forEach((editor: IAceEditorClass, index: number) => {\r\n      for (let i = 0; i < editorProps.length; i++) {\r\n        editor[editorProps[i]] = this.props.editorProps[editorProps[i]];\r\n      }\r\n      const defaultValueForEditor = get(defaultValue, index);\r\n      const valueForEditor = get(value, index, \"\");\r\n      editor.session.setUndoManager(new ace.UndoManager());\r\n      editor.setTheme(`ace/theme/${theme}`);\r\n      editor.renderer.setScrollMargin(\r\n        scrollMargin[0],\r\n        scrollMargin[1],\r\n        scrollMargin[2],\r\n        scrollMargin[3]\r\n      );\r\n      editor.getSession().setMode(`ace/mode/${mode}`);\r\n      editor.setFontSize(fontSize as any);\r\n      editor.renderer.setShowGutter(showGutter);\r\n      editor.getSession().setUseWrapMode(wrapEnabled);\r\n      editor.setShowPrintMargin(showPrintMargin);\r\n      editor.on(\"focus\", this.onFocus);\r\n      editor.on(\"blur\", this.onBlur);\r\n      editor.on(\"input\" as any, this.onInput);\r\n      editor.on(\"copy\", this.onCopy as any);\r\n      editor.on(\"paste\", this.onPaste as any);\r\n      editor.on(\"change\", this.onChange);\r\n      editor\r\n        .getSession()\r\n        .selection.on(\"changeSelection\", this.onSelectionChange);\r\n      editor.getSession().selection.on(\"changeCursor\", this.onCursorChange);\r\n      editor.session.on(\"changeScrollTop\", this.onScroll);\r\n      editor.setValue(\r\n        defaultValueForEditor === undefined\r\n          ? valueForEditor\r\n          : defaultValueForEditor,\r\n        cursorStart\r\n      );\r\n      const newAnnotations = get(annotations, index, []);\r\n      const newMarkers = get(markers, index, []);\r\n      editor.getSession().setAnnotations(newAnnotations);\r\n      if (newMarkers && newMarkers.length > 0) {\r\n        this.handleMarkers(newMarkers, editor);\r\n      }\r\n\r\n      for (let i = 0; i < editorOptions.length; i++) {\r\n        const option = editorOptions[i];\r\n        if (availableOptions.hasOwnProperty(option)) {\r\n          editor.setOption(option as any, this.props[option]);\r\n        } else if (this.props[option]) {\r\n          console.warn(\r\n            `ReaceAce: editor option ${option} was activated but not found. Did you need to import a related tool or did you possibly mispell the option?`\r\n          );\r\n        }\r\n      }\r\n      this.handleOptions(this.props, editor);\r\n\r\n      if (Array.isArray(commands)) {\r\n        commands.forEach(command => {\r\n          if (typeof command.exec === \"string\") {\r\n            (editor.commands as any).bindKey(command.bindKey, command.exec);\r\n          } else {\r\n            (editor.commands as any).addCommand(command);\r\n          }\r\n        });\r\n      }\r\n\r\n      if (keyboardHandler) {\r\n        editor.setKeyboardHandler(\"ace/keyboard/\" + keyboardHandler);\r\n      }\r\n    });\r\n\r\n    if (className) {\r\n      this.refEditor.className += \" \" + className;\r\n    }\r\n\r\n    if (focus) {\r\n      this.splitEditor.focus();\r\n    }\r\n\r\n    const sp = this.editor.env.split;\r\n    sp.setOrientation(\r\n      this.props.orientation === \"below\" ? sp.BELOW : sp.BESIDE\r\n    );\r\n    sp.resize(true);\r\n    if (onLoad) {\r\n      onLoad(sp);\r\n    }\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: ISplitEditorProps) {\r\n    const oldProps = prevProps;\r\n    const nextProps = this.props;\r\n\r\n    const split = this.editor.env.split;\r\n\r\n    if (nextProps.splits !== oldProps.splits) {\r\n      split.setSplits(nextProps.splits);\r\n    }\r\n\r\n    if (nextProps.orientation !== oldProps.orientation) {\r\n      split.setOrientation(\r\n        nextProps.orientation === \"below\" ? split.BELOW : split.BESIDE\r\n      );\r\n    }\r\n\r\n    split.forEach((editor: IAceEditorClass, index: number) => {\r\n      if (nextProps.mode !== oldProps.mode) {\r\n        editor.getSession().setMode(\"ace/mode/\" + nextProps.mode);\r\n      }\r\n      if (nextProps.keyboardHandler !== oldProps.keyboardHandler) {\r\n        if (nextProps.keyboardHandler) {\r\n          editor.setKeyboardHandler(\r\n            \"ace/keyboard/\" + nextProps.keyboardHandler\r\n          );\r\n        } else {\r\n          editor.setKeyboardHandler(null);\r\n        }\r\n      }\r\n      if (nextProps.fontSize !== oldProps.fontSize) {\r\n        editor.setFontSize(nextProps.fontSize as any);\r\n      }\r\n      if (nextProps.wrapEnabled !== oldProps.wrapEnabled) {\r\n        editor.getSession().setUseWrapMode(nextProps.wrapEnabled);\r\n      }\r\n      if (nextProps.showPrintMargin !== oldProps.showPrintMargin) {\r\n        editor.setShowPrintMargin(nextProps.showPrintMargin);\r\n      }\r\n      if (nextProps.showGutter !== oldProps.showGutter) {\r\n        editor.renderer.setShowGutter(nextProps.showGutter);\r\n      }\r\n\r\n      for (let i = 0; i < editorOptions.length; i++) {\r\n        const option = editorOptions[i];\r\n        if (nextProps[option] !== oldProps[option]) {\r\n          editor.setOption(option as any, nextProps[option]);\r\n        }\r\n      }\r\n      if (!isEqual(nextProps.setOptions, oldProps.setOptions)) {\r\n        this.handleOptions(nextProps, editor);\r\n      }\r\n      const nextValue = get(nextProps.value, index, \"\");\r\n      if (editor.getValue() !== nextValue) {\r\n        // editor.setValue is a synchronous function call, change event is emitted before setValue return.\r\n        this.silent = true;\r\n        const pos = (editor.session.selection as any).toJSON();\r\n        editor.setValue(nextValue, nextProps.cursorStart);\r\n        (editor.session.selection as any).fromJSON(pos);\r\n        this.silent = false;\r\n      }\r\n      const newAnnotations = get(nextProps.annotations, index, []);\r\n      const oldAnnotations = get(oldProps.annotations, index, []);\r\n      if (!isEqual(newAnnotations, oldAnnotations)) {\r\n        editor.getSession().setAnnotations(newAnnotations);\r\n      }\r\n\r\n      const newMarkers = get(nextProps.markers, index, []);\r\n      const oldMarkers = get(oldProps.markers, index, []);\r\n      if (!isEqual(newMarkers, oldMarkers) && Array.isArray(newMarkers)) {\r\n        this.handleMarkers(newMarkers, editor);\r\n      }\r\n    });\r\n\r\n    if (nextProps.className !== oldProps.className) {\r\n      const appliedClasses = this.refEditor.className;\r\n      const appliedClassesArray = appliedClasses.trim().split(\" \");\r\n      const oldClassesArray = oldProps.className.trim().split(\" \");\r\n      oldClassesArray.forEach(oldClass => {\r\n        const index = appliedClassesArray.indexOf(oldClass);\r\n        appliedClassesArray.splice(index, 1);\r\n      });\r\n      this.refEditor.className =\r\n        \" \" + nextProps.className + \" \" + appliedClassesArray.join(\" \");\r\n    }\r\n\r\n    if (nextProps.theme !== oldProps.theme) {\r\n      split.setTheme(\"ace/theme/\" + nextProps.theme);\r\n    }\r\n\r\n    if (nextProps.focus && !oldProps.focus) {\r\n      this.splitEditor.focus();\r\n    }\r\n    if (\r\n      nextProps.height !== this.props.height ||\r\n      nextProps.width !== this.props.width\r\n    ) {\r\n      this.editor.resize();\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    this.editor.destroy();\r\n    this.editor = null;\r\n  }\r\n\r\n  public onChange(event: any) {\r\n    if (this.props.onChange && !this.silent) {\r\n      const value: any = [];\r\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\r\n        value.push(editor.getValue());\r\n      });\r\n      this.props.onChange(value, event);\r\n    }\r\n  }\r\n\r\n  public onSelectionChange(event: any) {\r\n    if (this.props.onSelectionChange) {\r\n      const value: any = [];\r\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\r\n        value.push(editor.getSelection());\r\n      });\r\n      this.props.onSelectionChange(value, event);\r\n    }\r\n  }\r\n  public onCursorChange(event: any) {\r\n    if (this.props.onCursorChange) {\r\n      const value: any = [];\r\n      this.editor.env.split.forEach((editor: IAceEditorClass) => {\r\n        value.push(editor.getSelection());\r\n      });\r\n      this.props.onCursorChange(value, event);\r\n    }\r\n  }\r\n  public onFocus(event: any) {\r\n    if (this.props.onFocus) {\r\n      this.props.onFocus(event);\r\n    }\r\n  }\r\n\r\n  public onInput(event: any) {\r\n    if (this.props.onInput) {\r\n      this.props.onInput(event);\r\n    }\r\n  }\r\n\r\n  public onBlur(event: any) {\r\n    if (this.props.onBlur) {\r\n      this.props.onBlur(event);\r\n    }\r\n  }\r\n\r\n  public onCopy(text: string) {\r\n    if (this.props.onCopy) {\r\n      this.props.onCopy(text);\r\n    }\r\n  }\r\n\r\n  public onPaste(text: string) {\r\n    if (this.props.onPaste) {\r\n      this.props.onPaste(text);\r\n    }\r\n  }\r\n\r\n  public onScroll() {\r\n    if (this.props.onScroll) {\r\n      this.props.onScroll(this.editor);\r\n    }\r\n  }\r\n\r\n  public handleOptions(props: ISplitEditorProps, editor: IAceEditorClass) {\r\n    const setOptions = Object.keys(props.setOptions);\r\n    for (let y = 0; y < setOptions.length; y++) {\r\n      editor.setOption(setOptions[y] as any, props.setOptions[setOptions[y]]);\r\n    }\r\n  }\r\n\r\n  public handleMarkers(markers: IMarker[], editor: IAceEditorClass) {\r\n    // remove foreground markers\r\n    let currentMarkers = editor.getSession().getMarkers(true);\r\n    for (const i in currentMarkers) {\r\n      if (currentMarkers.hasOwnProperty(i)) {\r\n        editor.getSession().removeMarker(currentMarkers[i].id);\r\n      }\r\n    }\r\n    // remove background markers\r\n    currentMarkers = editor.getSession().getMarkers(false);\r\n    for (const i in currentMarkers) {\r\n      if (currentMarkers.hasOwnProperty(i)) {\r\n        editor.getSession().removeMarker(currentMarkers[i].id);\r\n      }\r\n    }\r\n    // add new markers\r\n    markers.forEach(\r\n      ({\r\n        startRow,\r\n        startCol,\r\n        endRow,\r\n        endCol,\r\n        className,\r\n        type,\r\n        inFront = false\r\n      }) => {\r\n        const range = new Range(startRow, startCol, endRow, endCol);\r\n        editor\r\n          .getSession()\r\n          .addMarker(range as any, className, type as any, inFront);\r\n      }\r\n    );\r\n  }\r\n\r\n  public updateRef(item: HTMLElement) {\r\n    this.refEditor = item;\r\n  }\r\n\r\n  public render() {\r\n    const { name, width, height, style } = this.props;\r\n    const divStyle = { width, height, ...style };\r\n    return <div ref={this.updateRef} id={name} style={divStyle} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}