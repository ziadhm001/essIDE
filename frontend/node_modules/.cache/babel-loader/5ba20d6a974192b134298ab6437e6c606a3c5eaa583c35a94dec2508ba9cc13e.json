{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ziad\\\\projects\\\\IDE\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport AceEditor from \"react-ace\";\nimport Sidebar from './components/Sidebar/Sidebar';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Record from './components/Record/Record';\nimport NavbarPlay from './components/NavbarPlay/NavbarPlay';\nimport NavbarRec from './components/NavbarRec/NavbarRec';\nimport Axios from 'axios';\nimport { useState } from 'react';\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-one_dark\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet defaultVal = `/* This is Eliminating Silly Switching Online IDE.\n* You can start coding & we will record the session for you!\n*/\nconsole.log('Hello world, from ESS');`;\nfunction App() {\n  _s();\n  const [textInIDE, setTextInIDE] = useState(defaultVal);\n  const [recordText, setRecordText] = useState(defaultVal);\n  const [record, setRecord] = useState(false);\n  let userActions = [];\n  let counter = 0;\n  const sendData = async body => {\n    Axios.post(\"http://localhost:5000/record\", body);\n  };\n  const playHandler = () => {\n    setRecordText(recordText);\n    let lines = recordText.split('\\n');\n    const playRecursive = () => {\n      setTimeout(() => {\n        counter--;\n        lines[userActions[counter]['start'].row] = lines[userActions[counter]['start'].row].slice(0, userActions[counter]['start'].column) + userActions[counter]['lines'] + lines[userActions[counter]['start'].row].slice(userActions[counter]['start'].column);\n        lines = lines.join('\\n');\n        setTextInIDE(lines);\n        lines = lines.split('\\n');\n        if (counter !== 0) playRecursive();\n      }, userActions[counter - 1].timestamp - userActions[counter].timestamp);\n    };\n    playRecursive();\n  };\n  const recordHandler = () => {\n    setRecordText(textInIDE);\n    setRecord(true);\n    const timestamp = Date.now();\n    userActions.unshift({\n      action: '1',\n      lines: '2',\n      start: '3',\n      timestamp: timestamp\n    });\n    console.log(userActions);\n  };\n  const codeValue = (value, event) => {\n    if (record === true) {\n      const timestamp = Date.now();\n      sendData({\n        action: event.action,\n        lines: event.lines,\n        start: event.start,\n        timestamp: timestamp\n      });\n      userActions.unshift({\n        action: event.action,\n        lines: event.lines,\n        start: event.start,\n        timestamp: timestamp\n      });\n      counter++;\n    } else console.log(userActions);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/record\",\n        element: /*#__PURE__*/_jsxDEV(Record, {\n          textInIDE: textInIDE,\n          defaultVal: defaultVal,\n          setTextInIDE: setTextInIDE,\n          recordHandler: recordHandler,\n          codeValue: codeValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9S4CoWliEBEbhFan97sPWzz5LOE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["AceEditor","Sidebar","BrowserRouter","Router","Routes","Route","Link","Record","NavbarPlay","NavbarRec","Axios","useState","defaultVal","App","textInIDE","setTextInIDE","recordText","setRecordText","record","setRecord","userActions","counter","sendData","body","post","playHandler","lines","split","playRecursive","setTimeout","row","slice","column","join","timestamp","recordHandler","Date","now","unshift","action","start","console","log","codeValue","value","event"],"sources":["D:/Ziad/projects/IDE/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport AceEditor from \"react-ace\";\nimport Sidebar from './components/Sidebar/Sidebar';\nimport {BrowserRouter as Router, Routes ,Route, Link} from \"react-router-dom\";\nimport Record from './components/Record/Record';\nimport NavbarPlay from './components/NavbarPlay/NavbarPlay';\nimport NavbarRec from './components/NavbarRec/NavbarRec';\nimport Axios from 'axios';\nimport { useState } from 'react';\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/theme-one_dark\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nlet defaultVal = `/* This is Eliminating Silly Switching Online IDE.\n* You can start coding & we will record the session for you!\n*/\nconsole.log('Hello world, from ESS');`\n\nfunction App() {\n  const [textInIDE, setTextInIDE] = useState(defaultVal);\n  const [recordText, setRecordText] = useState(defaultVal);\n  const [record, setRecord] = useState(false);\n  let userActions = [];\n  let counter = 0;\n\n  const sendData = async (body) => {\n    Axios.post(\"http://localhost:5000/record\",body);\n  }\n  const playHandler = () => {\n    setRecordText(recordText);\n    let lines = recordText.split('\\n');\n    const playRecursive = () => {\n      setTimeout(()=>{\n        counter--;\n        lines[userActions[counter]['start'].row] = lines[userActions[counter]['start'].row].slice(0,userActions[counter]['start'].column) + userActions[counter]['lines'] + lines[userActions[counter]['start'].row].slice(userActions[counter]['start'].column);\n        lines = lines.join('\\n');\n        setTextInIDE(lines);\n        lines = lines.split('\\n')\n        if(counter !== 0)\n          playRecursive();\n      },userActions[counter-1].timestamp - userActions[counter].timestamp);\n    }\n    playRecursive();\n  }\n\n  const recordHandler = () => {\n    setRecordText(textInIDE);\n    setRecord(true);\n    const timestamp = Date.now();\n    userActions.unshift({action: '1', lines: '2', start: '3', timestamp: timestamp})\n    console.log(userActions);\n  }\n\n  const codeValue= (value,event) => {\n    if(record === true)\n    {\n      const timestamp = Date.now();\n      sendData({action: event.action, lines: event.lines, start: event.start, timestamp: timestamp});\n      userActions.unshift({action: event.action, lines: event.lines, start: event.start, timestamp: timestamp});\n      counter++;\n    }\n    else\n      console.log(userActions)\n  }\n  return (\n    <Router> \n      <Routes>\n        <Route path='/record' element={\n        <Record textInIDE={textInIDE} defaultVal={defaultVal} setTextInIDE={setTextInIDE} recordHandler={recordHandler} codeValue={codeValue}/>\n        }/>\n    </Routes>\n  </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}