{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    setIsLoading(true);\n    setError(null);\n    Axios.post('http://localhost:3001/api/user/signup', {\n      email,\n      password\n    }).then(response => {\n      console.log(response);\n      if (response.statusText !== \"OK\") {\n        setIsLoading(false);\n        setError(response.data.error);\n      } else {\n        // Save user to local storage\n        localStorage.setItem('user', response.data);\n        // Update AuthContext\n        dispatch({\n          type: 'LOGIN',\n          payload: response.data\n        });\n        setIsLoading(false);\n      }\n    });\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // update loading state\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error,\n    setError\n  };\n};\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","Axios","post","then","response","console","log","statusText","data","localStorage","setItem","type","payload","fetch","method","headers","body","JSON","stringify","json","ok"],"sources":["E:/project/essIDE/frontend/src/components/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from './useAuthContext';\r\n\r\n\r\nexport const useSignup = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const { dispatch }  =  useAuthContext()\r\n\r\n    const signup = async (email, password) => {\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        Axios.post('http://localhost:3001/api/user/signup',{email,password})\r\n        .then(response =>{\r\n            console.log(response)\r\n            if(response.statusText !== \"OK\") \r\n            {\r\n                setIsLoading(false)\r\n                setError(response.data.error)\r\n            }\r\n\r\n            else\r\n            {\r\n                // Save user to local storage\r\n                localStorage.setItem('user', response.data)\r\n                // Update AuthContext\r\n                dispatch({type: 'LOGIN', payload:response.data})\r\n                setIsLoading(false);\r\n            }   \r\n        })\r\n    const response = await fetch('/api/user/signup', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n    const json = await response.json()\r\n    if (!response.ok) {\r\n        setIsLoading(false)\r\n        setError(json.error)\r\n    }\r\n    if (response.ok) {\r\n        // save the user to local storage\r\n        localStorage.setItem('user', JSON.stringify(json))\r\n\r\n        // update the auth context\r\n        dispatch({type:'LOGIN', payload: json})\r\n\r\n        // update loading state\r\n        setIsLoading(false)\r\n        }\r\n    }\r\n    return { signup, isLoading, error , setError }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAGjD,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEO;EAAS,CAAC,GAAKN,cAAc,EAAE;EAEvC,MAAMO,MAAM,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC1CJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEVE,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEdO,KAAK,CAACC,IAAI,CAAC,uCAAuC,EAAC;MAACH,KAAK;MAACC;IAAQ,CAAC,CAAC,CACnEG,IAAI,CAACC,QAAQ,IAAG;MACbC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAGA,QAAQ,CAACG,UAAU,KAAK,IAAI,EAC/B;QACIX,YAAY,CAAC,KAAK,CAAC;QACnBF,QAAQ,CAACU,QAAQ,CAACI,IAAI,CAACf,KAAK,CAAC;MACjC,CAAC,MAGD;QACI;QACAgB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,QAAQ,CAACI,IAAI,CAAC;QAC3C;QACAX,QAAQ,CAAC;UAACc,IAAI,EAAE,OAAO;UAAEC,OAAO,EAACR,QAAQ,CAACI;QAAI,CAAC,CAAC;QAChDZ,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC,CAAC;IACN,MAAMQ,QAAQ,GAAG,MAAMS,KAAK,CAAC,kBAAkB,EAAE;MAC7CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEnB,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC;IACF,MAAMmB,IAAI,GAAG,MAAMf,QAAQ,CAACe,IAAI,EAAE;IAClC,IAAI,CAACf,QAAQ,CAACgB,EAAE,EAAE;MACdxB,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACyB,IAAI,CAAC1B,KAAK,CAAC;IACxB;IACA,IAAIW,QAAQ,CAACgB,EAAE,EAAE;MACb;MACAX,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEO,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAtB,QAAQ,CAAC;QAACc,IAAI,EAAC,OAAO;QAAEC,OAAO,EAAEO;MAAI,CAAC,CAAC;;MAEvC;MACAvB,YAAY,CAAC,KAAK,CAAC;IACnB;EACJ,CAAC;EACD,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF,KAAK;IAAGC;EAAS,CAAC;AAClD,CAAC;AAAA,GApDYF,SAAS;EAAA,QAGKD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}